// <auto-generated />
using Inquiry__Management__System.InquiryContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Inquiry__Management__System.Migrations
{
    [DbContext(typeof(InquiryDbContext))]
    [Migration("20220618092356_rg")]
    partial class rg
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Inquiry__Management__System.Models.AgentProductCost", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Agent_Id");

                    b.Property<double>("Cost");

                    b.Property<string>("Product_Id");

                    b.HasKey("Id");

                    b.ToTable("AgentProductCosts");
                });

            modelBuilder.Entity("Inquiry__Management__System.Models.Agents", b =>
                {
                    b.Property<int>("Agent_Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address")
                        .IsRequired();

                    b.Property<string>("Agent_Name")
                        .IsRequired();

                    b.Property<string>("Email");

                    b.Property<string>("Location")
                        .IsRequired();

                    b.Property<string>("Phone_Number")
                        .IsRequired();

                    b.HasKey("Agent_Id");

                    b.ToTable("Agents");
                });

            modelBuilder.Entity("Inquiry__Management__System.Models.Company_Information", b =>
                {
                    b.Property<int>("Company_Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address")
                        .IsRequired();

                    b.Property<string>("Company_Name")
                        .IsRequired();

                    b.Property<string>("Conctacts")
                        .IsRequired();

                    b.Property<string>("Description");

                    b.Property<string>("Location")
                        .IsRequired();

                    b.HasKey("Company_Id");

                    b.ToTable("Company_Information");
                });

            modelBuilder.Entity("Inquiry__Management__System.Models.Customers", b =>
                {
                    b.Property<string>("Customer_Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50);

                    b.Property<string>("Agent_Id");

                    b.Property<string>("DOB");

                    b.Property<string>("FullName");

                    b.Property<string>("Gender");

                    b.Property<string>("Height");

                    b.Property<string>("Location");

                    b.Property<string>("National_Id");

                    b.Property<string>("Nationality");

                    b.Property<string>("Notes");

                    b.Property<string>("Passport_No");

                    b.Property<string>("RegistrationDate");

                    b.Property<string>("Weight");

                    b.HasKey("Customer_Id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("Inquiry__Management__System.Models.Feedback", b =>
                {
                    b.Property<int>("Feedback_Id")
                        .ValueGeneratedOnAdd();

                    b.Property<double>("Cost");

                    b.Property<string>("Customer_Id");

                    b.Property<string>("Date")
                        .IsRequired();

                    b.Property<string>("Invoice_Date");

                    b.Property<int>("Invoice_No");

                    b.Property<string>("IsInvoice");

                    b.Property<string>("Ispaid");

                    b.Property<string>("Payment_Date");

                    b.Property<string>("Payment_Ref");

                    b.Property<string>("Product_Id");

                    b.Property<string>("Results")
                        .IsRequired();

                    b.HasKey("Feedback_Id");

                    b.ToTable("Feedbacks");
                });

            modelBuilder.Entity("Inquiry__Management__System.Models.Invoices", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Agent_Id");

                    b.Property<string>("Customer_Id");

                    b.Property<string>("Date");

                    b.Property<string>("Invoice_No");

                    b.Property<string>("Product_Id");

                    b.HasKey("Id");

                    b.ToTable("Invoices");
                });

            modelBuilder.Entity("Inquiry__Management__System.Models.Pager", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CurrentPage");

                    b.Property<int>("EndPage");

                    b.Property<int>("PageSize");

                    b.Property<int>("StartPage");

                    b.Property<int>("TotalItems");

                    b.Property<int>("TotalPages");

                    b.HasKey("Id");

                    b.ToTable("Pagers");
                });

            modelBuilder.Entity("Inquiry__Management__System.Models.Payments", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Agent_Id");

                    b.Property<double>("Amount");

                    b.Property<string>("Payment_Mode");

                    b.HasKey("Id");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("Inquiry__Management__System.Models.Products", b =>
                {
                    b.Property<int>("Product_Id")
                        .ValueGeneratedOnAdd();

                    b.Property<double>("Cost");

                    b.Property<string>("Product_Name")
                        .IsRequired();

                    b.HasKey("Product_Id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Inquiry__Management__System.Models.Registration", b =>
                {
                    b.Property<string>("RegId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ConfirmPassword");

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("Role");

                    b.HasKey("RegId");

                    b.ToTable("Registrations");
                });
#pragma warning restore 612, 618
        }
    }
}
